@startuml

!define osaPuml https://raw.githubusercontent.com/Crashedmind/PlantUML-opensecurityarchitecture2-icons/master
!include osaPuml/Common.puml
!include osaPuml/Hardware/all.puml
!include osaPuml/Server/all.puml

title JSON-SCADA Architecture

cloud "Operators" as WebClients {
osa_desktop(Operator1,"Client","Web browser")
osa_desktop(Operator2,"Client","Web browser")
}

together {
cloud "Other\nSCADA Systems"{
osa_server(SCADA1,"SCADA","Server")
}

cloud "IoT/IIoT Devices" as MQTTDevices {
osa_server(MQTTDevice1,"MQTT","Device")
}

cloud "RTU Devices" as RTUDevices {
osa_server(RTUDevice1,"RTU","Device")
}
}

cloud "Corporate IT" as Corp1 {
[BI Tools\n<<MS Power BI>>]
osa_server(ITServer1,"ERP","Server")
osa_server(ITServer2,"MES","Server")
}

node "MQTT Broker" as Broker{
}

node "{json:scada}" {

package Processors {
[Calculations\nProcessor] as Calc
[Change Stream\nProcessor] as CSProc
[Custom Change Stream\nProcessor] as CustomCSProc
}
node {
database "MongoDB\n" as MongoDB1
database "PostgreSQL\n" as PostgreSQL1
}
[Grafana] as Grafana
[Webserver\nNginx] as Webserver
package Drivers{
[Server\nProtocol\nDriver] as ServerProtocol1
[Client\nProtocol\nDriver] as ClientProtocol1
[MQTT\nSparkplug\nProtocol\nDriver] as MQTTDriver1
}
[IT Systems\nIntegrations] as IT1
[Front End\nVisualization\nNodeJS/Express] as NodeJS
}


Webserver -d-> NodeJS: JWT auth
NodeJS -d-> MongoDB1
NodeJS -d-> PostgreSQL1
NodeJS -l-> Grafana
Grafana -d-> PostgreSQL1
MongoDB1 -r-> PostgreSQL1
Operator1 -d-> Webserver: https, JWT auth
Operator2 -d-> Webserver: https, JWT auth
Processors -d-> MongoDB1
ClientProtocol1 -u-> MongoDB1
ClientProtocol1 -d-> RTUDevice1: "IEC101/104\nDNP3\n..."
MQTTDriver1 -u-> MongoDB1
MQTTDriver1 -d-> Broker
MQTTDevice1 -u-> Broker: "Vanilla MQTT\nSparkplug B"

ServerProtocol1 -r-> MongoDB1
SCADA1 -u-> ServerProtocol1
IT1 -d-> PostgreSQL1
IT1 -u-> Corp1
@enduml