version: '2.1'

# {json:scada} Demo - (c) 2020 - Ricardo L. Olsen 

# ACCESS VIA WEB BROWSER AT http://127.0.0.1:8080
# Grafana access http://127.0.0.1:3000, user=admin password=jsonscada
# Must be online to connect to IEC60870-5-104 live demo server at 207.180.242.96:2404. 

services:

# NO AUTHENTICATION IS PROVIDED HERE FOR MONGODB AND POSTGRESQL!

  # must create a mongodb instance or cluster with a replica set
  jsdemo_mongorsn1:
    image: mongo:4.2.8
    container_name: jsdemo_mongors1
    hostname: mongors1
    restart: unless-stopped
    command: "mongod --bind_ip_all --replSet rs1 --wiredTigerCacheSizeGB 2 --dbpath /data/db --port 27017"
    volumes:
      - ./mongors1/files:/files
    # to export mongodb port on main host!
    #ports:
    #  - "27017:27017"
    # internal container port
    expose:
      - "27017"
    healthcheck:
      test: ["CMD", "/files/docker-healthcheck"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - jsdemo_net
  
  # init mongo replica set and json_scada database
  mongo_seed:
    image: mongo:4.2.8
    container_name: jsdemo_mongo_seed
    command: sh -c "mongo mongodb://jsdemo_mongorsn1:27017 /files/rs-init.js && sleep 5 && mongo mongodb://jsdemo_mongorsn1:27017/json_scada?replSet=rs1 /files/create-db.js && mongoimport --host jsdemo_mongorsn1 --db json_scada --collection protocolDriverInstances --type json --file /files/demo_instances.json && mongoimport --host jsdemo_mongorsn1 --db json_scada --collection protocolConnections --type json --file /files/demo_connections.json && mongoimport --host jsdemo_mongorsn1 --db json_scada --collection realtimeData --type json --file /files/demo_data.json "
    volumes:
      - ./mongo_seed/files:/files
    links:
      - jsdemo_mongorsn1
    depends_on:
      jsdemo_mongorsn1:
        condition: service_healthy    
    networks:
      - jsdemo_net
  
  # Postgresql/TimescaleDB historian. Without auth! 
  timescaledb:
    image: timescale/timescaledb:latest-pg12
    container_name: jsdemo_timescaledb
    restart: unless-stopped
    command: postgres -c shared_preload_libraries=timescaledb
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
      #- POSTGRES_PASSWORD=passw0rd
    volumes:
      - ./postgres_seed:/docker-entrypoint-initdb.d/
      #- ./timescale:/var/lib/postgresql
    # to export postgresql port on main host!
    #ports:
    #  - 5432:5432
    # internal container port
    expose:
      - "5432"
    links:
      - jsdemo_mongorsn1
    networks:
      - jsdemo_net

  # Postgresql/TimescaleDB Process SQL hist files 
  process_pg_hist:
    image: timescale/timescaledb:latest-pg12
    container_name: jsdemo_process_pg_hist
    command: /sql/process_pg_hist.sh
    restart: unless-stopped
    environment:
      - PSQL_PATH=/usr/local/bin
      - PGPORT=5432
      - PGHOST=jsdemo_timescaledb
      - PGDATABASE=json_scada
      - PGUSER=json_scada
      - PGPASSWORD=
    restart: unless-stopped
    volumes:
      - ./sql:/sql
    links:
      - jsdemo_mongorsn1
      - timescaledb
    networks:
      - jsdemo_net

  # Postgresql/TimescaleDB Process SQL current data files 
  process_pg_rtdata:
    image: timescale/timescaledb:latest-pg12
    container_name: jsdemo_process_pg_rtdata
    command: /sql/process_pg_rtdata.sh
    restart: unless-stopped
    environment:
      - PSQL_PATH=/usr/local/bin
      - PGPORT=5432
      - PGHOST=jsdemo_timescaledb
      - PGDATABASE=json_scada
      - PGUSER=json_scada
      - PGPASSWORD=
    restart: unless-stopped
    volumes:
      - ./sql:/sql
    links:
      - jsdemo_mongorsn1
      - timescaledb
    networks:
      - jsdemo_net

  grafana:
    image: grafana/grafana
    container_name: jsdemo_grafana
    restart: unless-stopped
    volumes: 
      - ./grafana_data:/var/lib/grafana
    # export grafana port to the host
    ports:
      - 3000:3000
    expose:
      - "3000"
    links:
      - timescaledb
    networks:
      - jsdemo_net
  
  # IEC6079-5-104 CLIENT, will connect to a demo server on 207.180.242.96:2404
  iec104client:
    image: mcr.microsoft.com/dotnet/core/runtime:3.1
    container_name: jsdemo_iec104client
    command: sh -c "sleep 30 && /jsonscada_bin/iec104client"
    restart: unless-stopped
    volumes:
      - ./conf:/conf
      - ./bin:/jsonscada_bin
    links:
      - jsdemo_mongorsn1
    networks:
      - jsdemo_net

  # IEC6079-5-104 SERVER, accepts connection on 127.0.0.1:2404 (originator address 1)
  iec104server:
    image: mcr.microsoft.com/dotnet/core/runtime:3.1
    container_name:  jsdemo_iec104server
    command: sh -c "sleep 30 && /jsonscada_bin/iec104server"
    restart: unless-stopped
    volumes:
      - ./conf:/conf
      - ./bin:/jsonscada_bin
    links:
      - jsdemo_mongorsn1
    # exports the iec 104 server port to the host
    ports:
      - 2404:2404
    expose:
      - "2404"
    networks:
      - jsdemo_net

  # process incoming data 
  cs_data_processor:
    image: node:current-alpine3.12
    container_name: jsdemo_cs_data_processor
    command:  sh -c "cd /cs_data_processor && sleep 15 && node cs_data_processor.js"
    restart: unless-stopped
    volumes:
      - ../src/cs_data_processor:/cs_data_processor
      - ./sql:/sql
      - ./conf:/conf
    links:
      - jsdemo_mongorsn1
    networks:
      - jsdemo_net

  # realtime web server, will listen on some HTTP port
  server_realtime:
    image: node:current-alpine3.12
    container_name: jsdemo_server_realtime
    command:  sh -c "cd /server_realtime && sleep 15 && node index.js"
    restart: unless-stopped
    environment:
      - JS_HTTP_PORT=8080
      - PGPORT=5432
      - PGHOST=jsdemo_timescaledb
      - PGDATABASE=json_scada
      - PGUSER=json_scada
      - PGPASSWORD=
    volumes:
      - ../src/server_realtime:/server_realtime
      - ../src/htdocs:/htdocs
      - ./conf:/conf
    links:
      - jsdemo_mongorsn1
    # exports the HTTP port to the main host
    ports:
      - 8080:8080
    expose:
      - "8080"
    networks:
      - jsdemo_net
    
  # calculation process
  calculations:
    image: node:current-alpine3.12
    container_name: jsdemo_calculations
    command:  sh -c "sleep 30 && cd /jsonscada_bin/ && ./calculations"
    restart: unless-stopped
    volumes:
      - ./conf:/conf
      - ./bin:/jsonscada_bin
    links:
      - jsdemo_mongorsn1
    networks:
      - jsdemo_net

networks:
  jsdemo_net:
    driver: bridge
